Query:
  type: object
  config:
    description: "User ORM repository"
    fields:
      user:
        type: "User"
        args:
          id:
            description: "Resolves using the user id."
            type: "Int"
        resolve: "@=resolver('User', [args])"
      users:
        type: "[User]"
        resolve: '@=resolver("UserCollection")'
      config:
        type: "Config"
        args:
          code:
            description: "Resolves using the config code."
            type: "String"
        resolve: "@=resolver('Config', [args])"
      menu:
        type: "[Menu]"
        resolve: '@=resolver("Menu")'
      article:
        type: "Article"
        args:
          id:
            description: "Resolves using the article id."
            type: "Int"
        resolve: "@=resolver('Article', [args])"
      articleByKey:
        type: "Article"
        args:
          url_key:
            description: "Resolves using the article url key."
            type: "String"
        resolve: "@=resolver('ArticleByKey', [args])"
      articles:
        type: "[Article]"
        args:
          limit:
            type: "Int"
        resolve: "@=resolver('ArticleCollection', [args])"
      footer:
        type: "[Footer]"
        resolve: '@=resolver("FooterCollection")'
      sliders:
        type: "[Slider]"
        resolve: '@=resolver("SliderCollection")'
      sliderByKey:
        type: "Slider"
        args:
          slider_key:
            description: "Resolves using the slider key."
            type: "String"
        resolve: "@=resolver('SliderByKey', [args])"
      block:
        type: "Block"
        args:
          identifier:
            description: "Resolves using the identifier."
            type: "String"
        resolve: "@=resolver('BlockByIdentifier', [args])"
      banner:
        type: "[Banner]"
        resolve: '@=resolver("BannerCollection")'
      chat:
        type: "Chat"
        args:
          token:
            type: "String!"
        resolve: "@=query('Chat', args)"